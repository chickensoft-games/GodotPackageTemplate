name: '📩 Self-Update'
on:
  workflow_dispatch:

jobs:
  self_update:
    name: '📩 Self-Update'
    runs-on: ubuntu-latest

    steps:
      - name: '🧾 Checkout'
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          lfs: true
          token: ${{ secrets.GH_BASIC }}

      - name: '🌏 Update Submodules'
        run: |
          git pull --recurse-submodules
          git submodule update --remote --recursive

      - name: '👀 See If Anything Changed'
        id: changes
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "Detected changes in repository."
            echo "changed=1" >> $GITHUB_OUTPUT
          else
            echo "No changes in repository."
            echo "changed=0" >> $GITHUB_OUTPUT
          fi

      - name: 🔎 Read Current Project Version
        if: steps.changes.outputs.changed == 1
        uses: KageKirin/get-csproj-version@v1.0.0
        id: current-version
        with:
          file: Chickensoft.GodotPackageTemplate.csproj
          xpath: /Project/PropertyGroup/Version

      - name: 🧮 Compute Next Version
        if: steps.changes.outputs.changed == 1
        uses:  chickensoft-games/next-godot-csproj-version@v1
        id: next-version
        with:
          project-version: ${{ steps.current-version.outputs.version }}
          # Read Godot version from the package we've included via submodules
          godot-version: src/global.json 
          bump: ${{ inputs.bump }}

      - name: ✨ Print Next Version
        if: steps.changes.outputs.changed == 1
        run: |
          echo "Next Version: ${{ steps.next-version.outputs.version }}"

      - name: 📝 Change Version
        if: steps.changes.outputs.changed == 1
        uses: vers-one/dotnet-project-version-updater@v1.3
        with:
          file: "Chickensoft.GodotPackageTemplate.csproj"
          version: ${{ steps.next-version.outputs.version }}

      - name: '⤴️ Create Pull Request'
        if: steps.changes.outputs.changed == 1
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: version/${{ steps.next-version.outputs.version }}
          commit-message: update submodules and version to ${{ steps.next-version.outputs.version }}
          title: 'chore(project): update version to ${{ steps.next-version.outputs.version }}'
          body: >
            chore(project): update submodules and version to ${{ steps.next-version.outputs.version }}.
